#!/usr/bin/env ruby

require_relative '../config/environment'
board = [" ", " ", " ", " ", " ", " ", " ", " ", " "]
puts "Welcome to Tic Tac Toe!"

def game_play
player1 = ""
player2 = ""

  def ending_game
    puts "Ending game.\n
   _.-._
  | | | |_
  | | | | |
  | | | | |
_ |  '-._ |
\\`\\`-.'-._;
 \\    '   |
  \\  .`  /
   |    |\n
    BYE!\n\n\n"
    exit
  end

  until player1 == "c" || player1 == "p"
    puts "Choose player 1. Type 'p' for person and 'c' for computer and 'q' to quit."
    player1 = gets.strip
    if player1 == "q"
      ending_game
    end
  end
  until player2 == "c" || player2 == "p"
    puts "Choose player 2. Type 'p' for person and 'c' for computer and 'q' to quit."
    player2 = gets.strip
     if player2 == "q"
      ending_game
    end
  end

    if player1 == "p" && player2 == "p"
      game = Game.new
      until game.won? || game.draw?
        game.play
      end
    elsif player1 == "p" && player2 == "c"
      game = Game.new(player_1 = Player::Human.new("X"), player_2 = Player::Computer.new("O"))
      until game.won? || game.draw?
        game.play
      end
    elsif player1 == "c" && player2 == "p"
      game = Game.new(player_1 = Player::Computer.new("X"), player_1 = Player::Human.new("O"))
      until game.won? || game.draw?
        game.play
      end
    elsif player1 == "c" && player2 == "c"
      game = Game.new(player_1 = Player::Computer.new("X"), player_2 = Player::Computer.new("O"))
      until game.won? || game.draw?
        game.play
      end
    end

    

    def play_again?
      play_again = ""
      puts "Would you like to play again?"
      play_again = gets.strip
      if play_again.downcase == "n" || play_again.downcase == "no"
        ending_game
      elsif play_again.downcase == "y" || play_again.downcase == "yes"
        game = Game.new
        until game.won? || game.draw?
          game_play
        end
      end
      
    end

    play_again?

end

game_play





